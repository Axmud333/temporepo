name: CI test


on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}

    steps:
      - name: checkout code
        uses: actions/checkout@v3

      - name: set up python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: install dependacies
        run: |
          python -m pip install --upgrade pip
          pip install -r backend/requirements.txt

      - name: Lintin
        run: |
          # will cancel the build if critical issue is found 
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          #this one wont fail it
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      
      - name: run containers
        run: docker compose up -d --build

      - name: fix perms
        run: |
          # -p flag so if the dir already exists it wont give an erro 
          mkdir -p logs
          touch logs/chat_logs.txt
          sudo chmod 777 logs/
          sudo chmod 777 logs/chat_logs.txt

      - name: wait for backend to be ready
        run: |
          docker logs back_end
          for i in {1..10}; do
          if curl -f http://127.0.0.1:8000/health 0; then
            echo "backend is ready";
            exit 0;
          fi
          echo 'waiting for backend...';
          sleep 3;
            done
            echo "backend failed to start";
            docker logs back_end
            exit 1

      - name: integration test
        run: pytest tests/

      - name: kill containers
        run: docker compose down

      
